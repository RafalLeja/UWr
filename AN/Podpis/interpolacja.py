import matplotlib.pyplot as plt

HEIGHT = 104
WIDTH = 634


Nx = [157, 136, 151, 108, 49, 46, 52]
Ny = [101, 84, 170, 186, 98, 197, 103]

Ux = [-240.1, -239.1, -234.7, -229.9, -226.1, -220.8, -220.1, -221.8]
Uy = [-0.750, -19.58, -25.31, -26.79, -25.60, -19.50, -5.061, -1.290]

Mx = [-208.8, -208.8, -207.4, -204.5, -201.0, -199.7, -196.9, -190.7, -187.8, -183.4]
My = [-0.496, -15.30, -15.85, -9.031, -3.300, -7.344, -10.80, -4.850, -10.92, -14.58]

ERx = [-173.0, -168.1, -162.1, -158.3, -158.6, -163.2, -167.2, -167.3, -162.5, -158.2, -151.0, -147.1, -145.6, -139.8, -136.6]
ERy = [-6.500, -10.42, -10.50, -7.417, -0.500, 0.750, -6.000, -14.42, -19.33, -19.33, -13.75, -2.084, -19.50, -8.750, -1.250]

KIx = [-126.8, -124.2, -124.1, -127.3, -126.8, -121.5, -116.3, -111.8, -111.2, -112.3, -105.9, -97.00, -93.98, -94.37, -93.25]
KIy = [13.83, 16.83, 11.33, 0.500, -11.25, -15.08, -12.33, -4.333, 0.794, -12.5, -17.67, -9.333, 4.069, -12.80, -13.75]

KROPKAx = [-88.58, -88.58, -87.58]
KROPKAy = [17.67, 16.00, 15.50]

Sx = [-26.79, -31.58, -35.67, -34.25, -15.00, -19.15, -34.44]
Sy = [6.847, 9.583, 7.333, 2.083, -8.417, -11.61, -12.11]

Yx = [-2.878, -5.458, -6.153, -6.252, -5.359, -2.779, 1.290, 4.664, 6.153, 6.649, 4.267, 1.588, 6.450, 9.626, 12.31, 14.59, 16.18, 16.18, 14.09, 11.02, 9.229, 10.12, 13.99, 22.92]
Yy = [5.656, 7.542, 4.366, 1.489, -1.191, -4.168, -5.557, -3.573, -0.198, 1.687, 4.366, 6.450, 1.786, -9.924E-2, -1.786, -4.267, -8.137, -11.51, -15.18, -18.26, -20.74, -23.72, -24.21, -24.11]

SUx = [77.40, 78.89, 81.18, 84.35, 87.63, 90.01, 90.90, 89.11, 85.54, 81.47, 80.28, 80.68, 83.76, 88.02, 91.10, 94.87, 97.65, 100.0, 101.6, 101.9, 102.8, 105.0, 106.7, 109.2, 111.0, 112.9, 113.7, 113.9, 115.2, 115.7, 115.3, 114.3]
SUy = [10.42, 6.847, 3.771, 0.496, -2.779, -5.557, -8.336, -10.22, -11.02, -10.82, -9.328, -6.947, -4.962, -2.878, -2.481, 0.198, 1.489, 3.275, 7.840, 2.481, -0.298, -3.076, -4.664, -5.656, -5.756, -5.160, -3.275, 0.198, 2.779, 4.466, 6.550, 9.328]

Px = [124.9, 126.8, 128.2, 129.6, 130.4, 130.7, 130.9, 128.6, 126.6, 123.7, 121.5, 118.9, 117.5, 118.3, 119.8, 121.9, 125.3, 129.4, 133.6, 138.8, 141.7, 141.2, 138.4, 135.2, 131.5]
Py = [7.542, 9.924, 6.847, 0.397, -7.244, -13.40, -22.43, -29.97, -36.22, -39.30, -39.30, -36.22, -31.16, -24.81, -16.27, -7.443, 1.389, 8.931, 12.01, 12.50, 8.634, 3.176, -0.893, -4.366, -8.336]

ER2x = [150.2, 152.9, 156.6, 160.1, 162.6, 164.3, 165.5, 163.4, 159.9, 156.8, 153.8, 152.3, 151.7, 152.9, 154.4, 157.8, 162.2, 166.1, 170.2, 174.8, 177.9, 180.8, 181.8, 180.3, 182.0, 186.6, 190.8, 193.9, 196.9, 198.2]
ER2y = [5.855, 2.679, 0.198, 0.397, 2.282, 4.863, 10.22, 12.90, 12.90, 10.12, 6.947, 2.878, -3.176, -6.550, -8.336, -9.725, -8.336, -4.863, 0.000, 5.260, 11.11, 13.89, 7.145, -1.985, -5.061, 9.924E-2, 4.863, 9.527, 13.10, 15.88]

OKO1x = [243.1, 242.3, 244.8, 243.6]
OKO1y = [17.25, 13.83, 14.92, 17.42]

OKO2x = [243.6, 246.3, 247.4, 246.5]
OKO2y = [0.833, -0.667, 0.583, 2.000]

NOSx = [253.4, 255.8, 257.9, 260.6, 262.1]
NOSy = [9.917, 9.833, 9.750, 9.417, 9.000]

USTAx = [265.8, 267.5, 269.4, 270.3, 271.8, 272.5, 272.6, 272.5, 271.2, 269.8, 267.9]
USTAy = [25.00, 23.83, 20.83, 18.00, 14.33, 11.08, 6.333, 2.917, 0.417, -2.000, -4.000]

litery = [(Nx, Ny), (Ux, Uy), (Mx, My), (ERx, ERy), (KIx, KIy), (KROPKAx, KROPKAy), (Sx, Sy),
          (Yx, Yy), (SUx, SUy), (Px, Py), (ER2x, ER2y), (OKO1x, OKO1y), (OKO2x, OKO2y), (NOSx, NOSy), (USTAx, USTAy)]

def interpolMatrix(values):
  n = len(values) - 1
  def points(x):
    return x/n
  
  q = [0 for i in range(n)]
  u = [0 for i in range(n)]
  p = [0 for i in range(n)]
  m = [0 for i in range(n+1)]
  q[0] = 0
  u[0] = 0

  def h(k):
    return points(k) - points(k-1)
  
  def lam(k):
    return h(k)/(h(k)+h(k+1))
  
  def f(a,b):
    if a == b:
      return values[a]
    return (f(a+1,b) - f(a,b-1))/(points(b)-points(a))
  
  def d(k):
    return 6*f(k-1,k+1)

  for k in range(1,n-1):
    p[k] = 2+(q[k-1]*lam(k))
    q[k] = (lam(k)-1)/p[k]
    u[k] = (d(k)-lam(k)*u[k-1])/p[k]
  
  m[n] = 0

  for k in range(n-1,1,-1):
    m[k] = u[k] + q[k]*m[k+1]
  
  return m


def interpolValue(x, values, m):
  n = len(values) - 1

  def points(x):
    return x/n

  def h(k):
    return points(k) - points(k-1)

  i = n-1
  while x - points(i) < 0:
    i = i-1

  a = (m[i+1]-m[i])/(6*h(i))
  b = m[i]/2
  c = (((values[i+1] - values[i])/h(i)) - (h(i)*(m[i+1]+2*m[i])/6))
  s = values[i] + (x-points(i))*(c+(x-points(i))*(b+(x-points(i))*a))
  return s


M = 1000
fig, ax = plt.subplots(figsize=(6.36, 1.04))
ax = fig.add_axes((0, 0, 1, 1))
ax.set(ylim=(-HEIGHT/2,HEIGHT/2),       
       xlim=(-WIDTH/2,WIDTH/2),
       yticks=[],
       xticks=[])
       
out = open("dane.txt", "wt")

itr = 0
for litera in litery:
  literaX = [0 for i in range(M)]
  literaY = [0 for i in range(M)]
  
  mx = interpolMatrix(litera[0])
  my = interpolMatrix(litera[1])
  for i in range(M):
    literaX[i] = interpolValue(i/M, litera[0], mx)
    literaY[i] = interpolValue(i/M, litera[1], my)

  ax.plot(literaX, literaY, color='blue', linewidth=0.8)
  out.write(f'''krzywa{itr}:\n
            Xn = {litera[0]}\n
            Yn = {litera[1]}\n
            tn = {[k/len(litera[0]) for k in range(len(litera[0]))]}\n
            un = {[k/M for k in range(M)]}\n\n''')
  itr +=1


fig.savefig("output2.png")

