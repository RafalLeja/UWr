#include <string>

struct Nickname
{
    explicit Nickname(std::string input) : nick_(std::move(input)) {}
private:
    std::string nick_; // std::string is a RAII-wrapper around char*
};

int main(int ac, char* av[])
{
    Nickname n1("Whatever");
    // copy constructor is implicitly generated by compiler
    Nickname n2(n1);
    // same for copy assignment operator
    Nickname n3 = n2;
    // same for move constructor
    Nickname n4 = std::move(n2);
} // n4, n3, n2, n1 go out-of-scope - destructors called
  // everything works correctly automagically thanks to RAII
